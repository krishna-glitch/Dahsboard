## Dev Nginx server that proxies Vite (frontend) and Flask (API)
#
# Why: lets you test proxy/cache behavior locally without building the frontend.
# Frontend remains hot-reloaded via Vite (WS upgrade handled below).
#
# Usage (Ubuntu):
#   - Save as /etc/nginx/sites-available/wq-dev
#   - Enable: sudo ln -s /etc/nginx/sites-available/wq-dev /etc/nginx/sites-enabled/
#   - Test & reload: sudo nginx -t && sudo systemctl reload nginx
#   - Open http://localhost:8080

upstream vite_dev {
    server 127.0.0.1:5173;  # Vite dev server
    keepalive 32;
}

upstream flask_api {
    server 127.0.0.1:5000;  # Flask dev server
    keepalive 32;
}

server {
    listen 8080;
    server_name _;

    # Security headers (dev-safe)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Frontend: proxy EVERYTHING except /api to Vite dev server (HMR websockets supported)
    location / {
        proxy_pass http://vite_dev;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # WebSocket upgrades for Vite HMR
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # API: proxy to Flask. Keep cache include commented by default in dev.
    location /api/ {
        proxy_pass http://flask_api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_read_timeout 300s;
        proxy_connect_timeout 15s;
        proxy_send_timeout 60s;

        # Optional: enable API cache locally to test behavior
        # include /etc/nginx/snippets/api-cache.conf;
    }
}

