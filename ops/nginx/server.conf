## Example Nginx server configuration for this project
#
# Phased rollout notes:
# - Phase 1: Serve frontend (React dist) and proxy API without cache (comment include line)
# - Phase 2: Enable API proxy cache by including ops/nginx/api-cache.conf
# - Phase 3: Tune gzip/brotli, timeouts, and add TLS
#
# Usage on EC2 (Ubuntu):
#   - Place this file at /etc/nginx/sites-available/water-quality
#   - Adjust `root` to point to the deployed build directory (see README)
#   - Enable: sudo ln -s /etc/nginx/sites-available/water-quality /etc/nginx/sites-enabled/
#   - Test:   sudo nginx -t
#   - Reload: sudo systemctl reload nginx

upstream flask_upstream {
    server 127.0.0.1:5000;  # Flask app (gunicorn/flask) listens here
    keepalive 64;
}

server {
    listen 80 default_server;
    server_name _;

    # Adjust to where you deploy the built frontend (React dist)
    # Example: /var/www/water-quality/react/frontend/dist
    root /var/www/water-quality/dist;
    index index.html;

    # Basic security / hardening headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip/Brotli compression (enable if modules available)
    gzip on;
    gzip_comp_level 5;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types application/json application/javascript text/javascript text/css image/svg+xml;

    # Optional: brotli if module is present
    # brotli on;
    # brotli_comp_level 5;
    # brotli_types application/json application/javascript text/javascript text/css image/svg+xml;

    # Serve static assets with long-lived immutable caching
    location ~* \.(?:js|mjs|css|svg|png|jpg|jpeg|gif|ico|webp|woff|woff2|ttf)$ {
        try_files $uri =404;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Ensure HTML is not cached aggressively (SPA entry point)
    location = /index.html {
        try_files $uri =404;
        add_header Cache-Control "no-cache";
    }

    # API proxy to Flask
    location /api/ {
        proxy_pass http://flask_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_read_timeout 300s;
        proxy_connect_timeout 15s;
        proxy_send_timeout 60s;

        # Phase 2: enable API cache for safe endpoints (uncomment after copying the snippet)
        # include /etc/nginx/snippets/api-cache.conf;  # copy ops/nginx/api-cache.conf here
    }

    # SPA fallback: everything else serves index.html
    location / {
        try_files $uri /index.html;
    }
}
